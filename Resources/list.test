Length Of Simple Lists

(length '())

0

(length '(a))

1

(length '(a b))

2

(length '(a b c))

3

(length '(a b c d))

4

(length '(a a a a a a a a a a a a a a a a))

16
----
Length Of Nested Lists

(length '((a) b))

2

(length '(a (b) c))

3

(length '(a (b c) d))

3

(length '(a (a a) a (a) a (a ((a) a) a a) a (a a) a a))

10
----
Car Cdr

(car '(1 2 3 4 5))

1

(cadr (1 2 3 4 5))

2

(caddr (1 2 3 4 5))

3

(cadddr (1 2 3 4 5))

4
----
Degenerate Map

(map (lambda (l) 42) '((1) (2 2) (3 3 3)) )

'(42 42 42)
----
Map Over Singleton List

(map (lambda (l) (length l)) '((1)) )

'(1)
----
An Identity Map

(map (lambda (l) l) '(1 2) )

'(1 2)
----
Map

(map (lambda (l) (length l)) '((1) (2 2) (3 3 3)) )

'(1 2 3)
----
Map2

(map (lambda (l) (+ 1 l)) '(0 1 2) )

'(1 2 3)
---
Select

(select (lambda (l) (< (length l) 3)) '((1) (2 2) (3 3 3) (4 4 4 4) (5 5 5 5 5)) )

'((1) (2 2))
----
Select Out Of Order

(select (lambda (l) (< (length l) 3)) '((1) (3 3 3) (4 4 4 4) (2 2) (5 5 5 5 5)) )

'((1) (2 2))
----
Any With None

(any? (lambda (i) (< i 3)) '(3 4 5))

#t
----
Any With One

(any? (lambda (i) (< i 3)) '(1 4 5))

#t
----
Any With Multiple

(any? (lambda (i) (< i 3)) '(1 4 2))

#f
